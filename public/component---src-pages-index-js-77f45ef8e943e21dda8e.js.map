{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/post.js","webpack:///./src/pages/index.js"],"names":["Container","styled","div","media","mobile","TextContainer","Name","h3","TagLine","sub","bioQuery","Bio","query","render","data","site","siteMetadata","author","authorTagline","Excerpt","p","Title","h4","Post","node","to","fields","slug","frontmatter","title","date","readingTime","text","dangerouslySetInnerHTML","__html","excerpt","posts","allMarkdownRemark","edges","keywords","map","key","id"],"mappings":"mgBAMA,IAAMA,EAAYC,IAAOC,IAAV,qEAAGD,CAAH,yBAGTE,IAAMC,OAHG,MAUTC,EAAgBJ,IAAOC,IAAV,yEAAGD,CAAH,SACbE,IAAMC,OADO,MAObE,EAAOL,IAAOM,GAAV,gEAAGN,CAAH,0CAKJO,EAAUP,IAAOQ,IAAV,mEAAGR,CAAH,oEAuBPS,EAAQ,aAWCC,EA5BH,kBACR,YAAC,cAAD,CACIC,MAAOF,EACPG,OAAQ,SAAAC,GAAS,IAAD,EACsBA,EAAKC,KAAKC,aAApCC,EADI,EACJA,OAAQC,EADJ,EACIA,cAChB,OACI,YAAClB,EAAD,KACI,YAACK,EAAD,KACI,YAACC,EAAD,KAAOW,GACP,YAACT,EAAD,KAAUU,MAR9B,U,0KC5BJ,IAAMlB,EAAYC,IAAOC,IAAV,sEAAGD,CAAH,SACTE,IAAMC,OADG,MAOTe,EAAUlB,IAAOmB,EAAV,oEAAGnB,CAAH,sFAOPoB,EAAQpB,IAAOqB,GAAV,kEAAGrB,CAAH,+CAiCIsB,EA5BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CAAYC,GAAID,EAAKE,OAAOC,MACxB,YAAC,EAAD,KACI,YAACN,EAAD,KAAQG,EAAKI,YAAYC,MAAzB,KACA,uBACI,8BAAUL,EAAKI,YAAYE,MAC3B,iCACA,wBAAON,EAAKE,OAAOK,YAAYC,OAEnC,YAACb,EAAD,CAASc,wBAAyB,CAAEC,OAAQV,EAAKW,c,kMCzB7D,IAAMd,EAAQpB,IAAOM,GAAV,+DAAGN,CAAH,+DAKLE,IAAMC,OALD,MAyBEQ,GAdE,sBAAe,IACpBwB,EADmB,EAAXtB,KACKuB,kBAAkBC,MACrC,OACI,YAAC,IAAD,KACI,YAAC,IAAD,CAAKT,MAAM,YAAYU,SAAU,CAAC,SAAD,kBACjC,YAAC,EAAD,MACA,YAAC,EAAD,qBACCH,EAAMI,KAAI,YAAe,IAAZhB,EAAW,EAAXA,KACV,OAAO,YAAC,EAAD,CAAMiB,IAAKjB,EAAKkB,GAAIlB,KAAMA,SAM/B,e","file":"component---src-pages-index-js-77f45ef8e943e21dda8e.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport media from '../utils/media';\n\nconst Container = styled.div`\n    margin-top: 10vh;\n\n    ${media.mobile`\n    flex-direction: column;\n    text-align: center;\n    margin-top: 7vh;\n  `};\n`;\n\nconst TextContainer = styled.div`\n    ${media.mobile`\n    flex-direction: column;\n    text-align: center;\n  `};\n`;\n\nconst Name = styled.h3`\n    display: block;\n    color: rgb(29, 29, 29, 1);\n`;\n\nconst TagLine = styled.sub`\n    display: inline-block;\n    font-weight: bolder;\n    color: rgb(29, 29, 29, 1);\n`;\n\nconst Bio = () => (\n    <StaticQuery\n        query={bioQuery}\n        render={data => {\n            const { author, authorTagline } = data.site.siteMetadata;\n            return (\n                <Container>\n                    <TextContainer>\n                        <Name>{author}</Name>\n                        <TagLine>{authorTagline}</TagLine>\n                    </TextContainer>\n                </Container>\n            );\n        }}\n    />\n);\n\nconst bioQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                author\n                authorTagline\n            }\n        }\n    }\n`;\n\nexport default Bio;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.div`\n    ${media.mobile`\n    margin: 0.5rem 0;\n    padding: 0.4rem 0;\n  `};\n`;\n\nconst Excerpt = styled.p`\n    margin-top: 1rem;\n    font-weight: bolder;\n    letter-spacing: -1px;\n    color: rgb(29, 29, 29, 0.87);\n`;\n\nconst Title = styled.h4`\n    margin-top: 2.34rem;\n    color: rgba(0, 0, 0, 0.8);\n`;\n\nconst Post = ({ node }) => (\n    <StyledLink to={node.fields.slug}>\n        <Container>\n            <Title>{node.frontmatter.title} </Title>\n            <sub>\n                <span>on {node.frontmatter.date}</span>\n                <span>&nbsp; - &nbsp;</span>\n                <span>{node.fields.readingTime.text}</span>\n            </sub>\n            <Excerpt dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n        </Container>\n    </StyledLink>\n);\n\nPost.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired\n        }),\n        fields: PropTypes.shape({\n            slug: PropTypes.string.isRequired\n        }),\n        excerpt: PropTypes.string.isRequired\n    })\n};\n\nexport default Post;","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport styled from 'styled-components';\n\nimport SEO from '../components/seo';\nimport Bio from '../components/bio';\nimport Post from '../components/post';\nimport media from '../utils/media';\n\nconst Title = styled.h3`\n    font-weight: 800;\n    margin-top: 7vh;\n    color: rgba(0, 0, 0, 0.84);\n\n    ${media.mobile`\n    margin-top: 5vh;\n    margin: 3rem 0 0;\n  `};\n`;\n\nexport default ({ data }) => {\n    const posts = data.allMarkdownRemark.edges;\n    return (\n        <Layout>\n            <SEO title=\"All Posts\" keywords={[`gatsby`, `blog`, `react`]} />\n            <Bio />\n            <Title>Latest Posts</Title>\n            {posts.map(({ node }) => {\n                return <Post key={node.id} node={node} />;\n            })}\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"MMMM DD, YYYY\")\n                    }\n                    fields {\n                        slug\n                        readingTime {\n                            text\n                        }\n                    }\n                    excerpt\n                }\n            }\n        }\n    }\n`;"],"sourceRoot":""}